<?xml version="1.0" encoding="utf-8" ?>
<Defs>
	<!-- ==========[Mashed_Lynian_LynianAbilities_Aggressive]==========-->
	<!-- 
		Patched into:
			- DutyDef AssaultColony
			- DutyDef AssaultThing
	-->
	<ThinkTreeDef>
		<defName>Mashed_Lynian_LynianAbilities_Aggressive</defName>
		<thinkRoot Class="ThinkNode_Priority">
			<subNodes>
				<li Class="ThinkNode_ConditionalColonist">
					<invert>true</invert>
					<subNodes>
						<!-- Mashed_Lynian_PurrserkerRageAbility -->
						<li Class="ThinkNode_ConditionalHasAbility">
							<ability>Mashed_Lynian_PurrserkerRageAbility</ability>
							<subNodes>
								<li Class="ThinkNodeConditional_HashIntervalTick">
									<interval>25</interval>
									<subNodes>
										<li Class="ThinkNodeConditional_UnderCombatPressure">
											<maxThreatDistance>2</maxThreatDistance>
											<minCloseTargets>2</minCloseTargets>
											<subNodes>
												<li Class="JobGiver_AICastAbilityOnSelf">
													<ability>Mashed_Lynian_PurrserkerRageAbility</ability>
												</li>
											</subNodes>
										</li>
									</subNodes>
								</li>
							</subNodes>
						</li>
						<!-- Mashed_Lynian_LynianFiringFurrenzyAbility -->
						<li Class="ThinkNode_ConditionalHasAbility">
							<ability>Mashed_Lynian_LynianFiringFurrenzyAbility</ability>
							<subNodes>
								<li Class="ThinkNodeConditional_HashIntervalTick">
									<interval>65</interval>
									<subNodes>
										<li Class="JobGiver_AICastAbilityOnSelf">
											<ability>Mashed_Lynian_LynianFiringFurrenzyAbility</ability>
										</li>
									</subNodes>
								</li>
							</subNodes>
						</li>
						<!-- Mashed_Lynian_LynianFiringFurrenzyAbility -->
						<li Class="ThinkNode_ConditionalHasAbility" MayRequire="Ludeon.RimWorld.Biotech">
							<ability>Mashed_Lynian_LynianFurriousFiringFurrenzyAbility</ability>
							<subNodes>
								<li Class="ThinkNodeConditional_HashIntervalTick">
									<interval>45</interval>
									<subNodes>
										<li Class="JobGiver_AICastAbilityOnSelf">
											<ability>Mashed_Lynian_LynianFurriousFiringFurrenzyAbility</ability>
										</li>
									</subNodes>
								</li>
							</subNodes>
						</li>
						<!-- Mashed_Lynian_HuntersMarkAbility -->
						<li Class="ThinkNode_ConditionalHasAbility">
							<ability>Mashed_Lynian_HuntersMarkAbility</ability>
							<subNodes>
								<li Class="ThinkNodeConditional_HashIntervalTick">
									<interval>65</interval>
									<subNodes>
										<li Class="Mashed_Lynians.JobGiver_AICastOnHostiles">
											<ability>Mashed_Lynian_HuntersMarkAbility</ability>
										</li>
									</subNodes>
								</li>
							</subNodes>
						</li>
					</subNodes>
				</li>
			</subNodes>
		</thinkRoot>
	</ThinkTreeDef>
	<!-- ==========[Mashed_Lynian_LynianAbilities_Escape]==========-->
	<!-- 
		Patched into:
			- ThinkTreeDef Humanlike
	-->
	<ThinkTreeDef>
		<defName>Mashed_Lynian_LynianAbilities_Escape</defName>
		<thinkRoot Class="ThinkNode_Priority">
			<subNodes>
				<li Class="ThinkNode_ConditionalColonist">
					<invert>true</invert>
					<subNodes>
						<!-- Mashed_Lynian_LynianFiringFurrenzyAbility -->
						<li Class="ThinkNode_ConditionalHasAbility">
							<ability>Mashed_Lynian_DigAbility</ability>
							<subNodes>
								<li Class="ThinkNode_ConditionalTotalDamage">
									<thresholdPercent>0.25</thresholdPercent>
									<subNodes>
										<li Class="ThinkNode_HarmedRecently">
											<thresholdTicks>120</thresholdTicks>
											<subNodes>
												<li Class="ThinkNodeConditional_UnderCombatPressure">
													<maxThreatDistance>2</maxThreatDistance>
													<minCloseTargets>2</minCloseTargets>
													<subNodes>
														<li Class="JobGiver_AIJumpEscapeEnemies">
															<ability>Mashed_Lynian_DigAbility</ability>
														</li>
													</subNodes>
												</li>
											</subNodes>
										</li>
									</subNodes>
								</li>
							</subNodes>
						</li>
					</subNodes>
				</li>
			</subNodes>
		</thinkRoot>
	</ThinkTreeDef>
</Defs>